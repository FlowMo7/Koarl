// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.room_version = '2.2.5'
    ext.kotlinx_serialization_version = '0.20.0'
    ext.joda_version = '2.10.6'
    ext.okhttp_version = '4.9.0'
    ext.ktor_version = '1.3.2'
    ext.koin_version = '2.1.6'
    ext.kotlinxCoroutinesVersion = '1.3.4'
    ext.exposed_version = '0.27.1'

    ext.libraryVersion = '0.0.9'
    ext.libraryVersionCode = 1

    ext.libraryMinSdkVersion = 10
    ext.libraryTargetSdkVersion = 29

    ext.groupName = 'dev.moetz.koarl'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18'

        classpath 'com.github.ben-manes:gradle-versions-plugin:0.36.0'

        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:0.2.4"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}
apply plugin: 'binary-compatibility-validator'

subprojects {
    // Set the group-name and version for all sub-projects / modules globally here,
    // so that creating the POM when publishing the artifacts has it correctly
    group = groupName
    version = libraryVersion
}

allprojects {
    repositories {
        google()
        jcenter()

        maven {
            url  "https://dl.bintray.com/flowmo7/maven"
            content {
                includeGroup "dev.moetz"
            }
        }
    }
}

//task clean(type: Delete) {
//    delete rootProject.buildDir
//}

apiValidation {
    /**
     * Packages that are excluded from public API dumps even if they
     * contain public API.
     */
//    ignoredPackages += ["kotlinx.coroutines.internal"]

    /**
     * Sub-projects that are excluded from API validation
     */
    ignoredProjects += ["koarl-backend", "koarlsample"]
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}